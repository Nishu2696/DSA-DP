Question Link: https://leetcode.com/problems/partition-equal-subset-sum/

class Solution {
    public boolean canPartition(int[] nums) {
        int totalSum = 0;
        for (int i = 0; i < nums.length; i++) {
            totalSum = totalSum + nums[i];
        }

        if (totalSum % 2 == 1) {
            return false;
        } else {
            int n = nums.length;
            int target = totalSum / 2;
            Boolean[][] dp = new Boolean[n][target + 1];
            return helper(0, target, nums, dp);
        }
    }

    public boolean helper(int i, int k, int[] nums, Boolean[][] dp) {
        if (k == 0) {
            return true;
        }
        if (i == nums.length || k < 0) {
            return false;
        }
        if (dp[i][k] != null) {
            return dp[i][k];
        }

        return dp[i][k] = helper(i+1, k, nums, dp) || helper(i + 1, k - nums[i], nums, dp);
    }
}
