Question Link: https://www.geeksforgeeks.org/problems/introduction-to-dp/1

class Solution {
    static int MOD = 1000000007;
    static long topDown(int n) {
        // Memoization Technique - Recursive Technique
        // code here
        long[] dp = new long[n+1];
        Arrays.fill(dp, -1);
        return fibonacci(n, dp);
    }

    static long bottomUp(int n) {
        // Tabulation Technique - [Starting from 0]
        // code here
        long[] dp = new long[n + 1];
        dp[0] = 0;
        dp[1] = 1;
        
        for(int i = 2; i <= n; i++) {
            dp[i] = (dp[i-1] + dp[i-2]) % MOD;
        }
        
        return dp[n];
    }
    
    static long fibonacci(int n, long[] dp) {
        if (n <= 1) {
            return n;
        }
        if (dp[n] != -1) {
            return dp[n];
        }
        return dp[n] = (fibonacci(n-1, dp) + fibonacci(n-2, dp)) % MOD; 
    }
}
