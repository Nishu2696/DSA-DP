Question Link: https://leetcode.com/problems/partition-equal-subset-sum/

class Solution {
    public boolean canPartition(int[] nums) {
        int totalSum = 0;
        for (int i = 0; i < nums.length; i++) {
            totalSum = totalSum + nums[i];
        }

        if (totalSum % 2 == 1) {
            return false;
        } else {
            int n = nums.length;
            int target = totalSum / 2;
            boolean[][] dp = new boolean[n][target + 1];

            for (int i = 0; i < n; i++) {
                dp[i][0] = true;
            }

            if (nums[0] <= target) {
                dp[0][nums[0]] = true;
            }

            for (int i = 1; i < n; i++) {
                for (int j = 1; j <= target; j++) {
                    boolean notTaken = dp[i - 1][j];
                    boolean taken = false;

                    if (nums[i] <= j) {
                        taken = dp[i - 1][j - nums[i]];
                    }
                    dp[i][j] = notTaken || taken;
                }
            }

            return dp[n - 1][target];
        }
    }
}
