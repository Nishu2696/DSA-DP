Question Link: https://www.naukri.com/code360/problems/subset-sum-equal-to-k_1550954?leftPanelTab=0&leftPanelTabValue=SUBMISSION

import java.util.* ;
import java.io.*; 
public class Solution {
    // int arr[] = {2, 3, 7, 8, 10};
    // int k = 11;
    // n = 5
    // dp = {
    //     [null, null, null, null, null, null, null, null, null, null, null, true, null,],
    //     [null, null, null, null, null, null, null, null, null, null, null, true, null,],
    //     [null, null, null, null, null, null, null, null, true, null, null, false, null,],
    //     [null, null, null, null, false, null, null, null, true, null, null, false, null,],
    //     [null, null, null, false, false, null, null, null, false, null, null, false, null,],
    // }
    public static boolean subsetSumToK(int n, int k, int arr[]){
        Boolean[][] dp = new Boolean[n][k+1];
        return helper(0,k,arr,dp);
    }
    private static boolean helper(int i, int k, int[] arr, Boolean[][] dp){
        if(k==0) return true;
        if(i==arr.length || k<0) return false;
        if(dp[i][k]!=null) return dp[i][k];
        return dp[i][k] = helper(i+1,k,arr,dp) || helper(i+1,k-arr[i],arr,dp);
    }
}
